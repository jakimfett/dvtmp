.TH DVTM_PLUS 1 dvtm-plus\-VERSION
.nh
.SH NAME
dvtm-plus \- dynamic virtual terminal manager which is configurable
.SH SYNOPSIS
.B dvtm-plus
.RB [ \-v ]
.RB [ \-M ]
.RB [ \-m
.IR modifier ]
.RB [ \-d
.IR delay ]
.RB [ \-h
.IR lines ]
.RB [ \-t
.IR title ]
.RB [ \-g
.IR Choose algorithm for setting the title. FIX DESCRIPTION ]
.RB [ \-s
.IR status-fifo ]
.RB [ \-c
.IR cmd-fifo ]
.RI [ command \ ... "" ]
.SH DESCRIPTION
dvtm-plus is a dynamic tiling window manager which is configurable for the console.
As a console window manager it tries to make it easy to work with multiple
console based applications.
.SH OPTIONS
.TP
.B \-v
Print version information to standard output and exit.
.TP
.B \-M
Toggle default mouse grabbing upon startup. Use this to allow normal mouse operation
under X.
.TP
.BI \-m \ modifier
Set command modifier at runtime.
.TP
.BI \-d \ delay
Set the delay ncurses waits before deciding if a character that might be
part of an escape sequence is actually part of an escape sequence.
.TP
.BI \-h \ lines
Set the scrollback history buffer size at runtime.
.TP
.BI \-t \ title
Set a static terminal
.I title
and don't change it to the one of the currently focused window.
.TP
.BI \-s \ status-fifo
Open or create the named pipe
.I status-fifo
read its content and display it in the statusbar. See the
.I dvtm-plus-status
script for an usage example.
.TP
.BI \-c \ cmd-fifo
Open or create the named pipe
.I cmd-fifo
and look for commands to execute which were defined in
.IR config.h .
.TP
.IR command \ ...
Execute
.IR command (s),
each in a separate window.
.SH USAGE
.SS Keyboard commands
.TP
.B Mod
Each keybinding begins with Mod which defaults to
.BR ^g ,
but can be changed in
.I config.h
or with the
.B \-m
command line option.
.TP
.B Mod\-c
Create a new shell window. Change with DVTM_PLUS_CREATE environment
variable.
.TP
.B Mod\-C
Create a new shell window using the current working directory of the
focused window. Change with DVTM_PLUS_CREATE_CWD environment variable.
.TP
.B Mod\-x\-x
Close focused window. Change with the DVTM_PLUS_KILL_CLIENT
environment variable.
.TP
.B Mod\-l
Increases the master area width about 5% (all except grid and 
fullscreen layout). Change with the DVTM_PLUS_MASTER_DECR environment
variable.
.TP
.B Mod\-h
Decreases the master area width about 5% (all except grid and
fullscreen layout). Change with the DVTM_PLUS_MASTER_INCR environment
variable.
.TP
.B Mod\-i
Increase number of windows displayed in the master area. Change with
the DVTM_PLUS_INCR_WINDOWS environment variable.
.TP
.B Mod\-d
Decrease number of windows displayed in the master area. Change with
the DVTM_PLUS_DECR_WINDOWS environment variable.
.TP
.B Mod\-j
Focus next window. Change with the DVTM_PLUS_FOCUS_NEXT environment
variable.
.TP
.B Mod\-k
Focus previous window. Change with the DVTM_PLUS_FOCUS_PREV environment
variable.
.TP
.B Mod\-J
Focus next non minimized window. Change with the DVTM_PLUS_FOCUS_NEXT_MIN
environment variable.
.TP
.B Mod\-K
Focus previous non minimized window. Change with the DVTM_PLUS_FOCUS_PREV_MINV
environment variable.
.TP
.BI Mod\- n
Focus the
.IR n \-th
window.
.TP
.B Mod\-Tab
Focus previously selected window. Change with the DVTM_PLUS_FOCUS_PREV_WINDOW
environment variable.
.TP
.B Mod\-.
Toggle minimization of current window.
.TP
.B Mod\-m
Maximize current window (change to fullscreen layout). Change with the 
DVTM_PLUS_MAX_WINDOW environment variable.
.TP
.B Shift\-PageUp
.TQ
.B Mod\-PageUp
Scroll up.
.TP
.B Shift\-PageDown
.TQ
.B Mod\-PageDown
Scroll down.
.TP
.B Mod\-Space
Toggle between defined layouts (affects all windows). Change with the
DVTM_PLUS_TOGGLE_LAYOUTS environment variable.
.TP
.B Mod\-Enter
Zooms/cycles current window to/from master area. Change with the
DVTM_PLUS_ZOOM environment variable.
.TP
.B Mod\-f
Change to vertical stack tiling layout. Change with the
DVTM_PLUS_TILE_VERTICAL environment variable.
.TP
.B Mod\-b
Change to bottom stack tiling layout. Change with the DVTM_PLUS_TILE_BOTTOM
environment variable.
.TP
.B Mod\-g
Change to grid layout. Change with the DVTM_PLUS_TILE_GRID environment
variable.
.TP
.B Mod\-s
Show/hide the status bar. Change with the DVTM_PLUS_SHOW_HIDE_STATUS
environment variable.
.TP
.B Mod\-S
Toggle position of the status bar between top and bottom. Change with the
DVTM_PLUS_TOGGLE_STATUS_LOC environment variable.
.TP
.B Mod\-r
.TQ
.B Mod\-^L
Redraw whole screen.  Change control mod L with the DVTM_PLUS_REDRAW1
environment variable. Change the Mod with r with the DVTM_PLUS_REDRAW2
environment variable.
.TP
.B Mod\-a
Toggle keyboard multiplexing mode, if activated keypresses are sent to all
visible windows. Change with the DVTM_PLUS_MULTIPLEX_TOGGLE environment
variable.
.TP
.B Mod\-M
Toggle dvtm-plus mouse grabbing. Change with the DVTM_PLUS_TOGGLE_MOUSE
environment variable.
.TP
.B Mod\-e
Enter copy mode (see section below for further information). Change with
the DVTM_PLUS_COPY_MODE1 environment variable.
.TP
.B Mod\-/
Enter copy mode and start searching forward (assumes a vi-like editor).
Change with the DVTM_PLUS_COPY_MODE2 environment variable.
.TP
.B Mod\-p
Paste last copied text from copy mode at current cursor position. Change
with the DVTM_PLUS_PASTE environment variable.
.TP
.B Mod\-?
Show this manual page.
.TP
.B Mod\-Mod
Send the Mod key.
.TP
.B Mod-F[1..n]
.TQ
.B Mod-v-[1..n]
View all windows with nth tag.
.TP
.B Mod-0
View all windows with any tag.
.TP
.B Mod-v-Tab
Toggles to the previously selected tags.
.TP
.B Mod-V-[1..n]
Add/remove all windows with nth tag to/from the view.
.TP
.B Mod-t-[1..n]
Apply nth tag to focused window.
.TP
.B Mod-T-[1..n]
Add/remove nth tag to/from focused window.
.TP
.B Mod\-q\-q
Quit dvtm-plus.
.SS Mouse commands
.TP
.B Copy and Paste
By default dvtm-plus captures mouse events to provide the actions listed below.
Unfortunately this interferes with the standard X copy and paste mechanism.
To work around this you need to hold down
.B Shift
while selecting or pasting text.
Alternatively you can disable mouse support at compile time, start dvtm-plus with the
.B -M
flag or toggle mouse support during runtime with
.BR Mod\-M .
.TP
.B Button1 click
Focus window.
.TP
.B Button1 double click
Focus window and toggle maximization.
.TP
.B Button2 click
Zoom/cycle current window to/from master area.
.TP
.B Button3 click
Toggle minimization of current window.
.SS Copy mode
Copy mode gives easy access to past output by piping it to an editor. What
ever the editor prints to stdout upon exiting will be stored in an internal
register and can be pasted into other clients (via
.B Mod\-p
)
.SH ENVIRONMENT VARIABLES
.TP
.B DVTM_PLUS
Each process spawned by dvtm-plus will have this variable set to the dvtm-plus version
it is running under.
.TP
.B DVTM_PLUS_WINDOW_ID
Each process also has access to its constant and unique window id.
.TP
.B DVTM_PLUS_CMD_FIFO
If the -c command line argument was specified upon dvtm-plus startup, this variable
will be set to the file name of the named pipe. Thus allowing the process
to send commands back to dvtm-plus.
.TP
.B DVTM_PLUS_TERM
By default dvtm-plus uses its own terminfo file and therefore sets
.BR TERM=dvtm-plus
within the client windows. This can be overridden by setting the
.BR DVTM_PLUS_TERM
environment variable to a valid terminal name before launching dvtm-plus.
.TP
.B DVTM_PLUS_EDITOR
When entering the copymode dvtm-plus pipes the whole scroll back buffer to
.BR DVTM_PLUS_EDITOR
which is launched with
.BR \-
(indicating to read from stdin) as its only argument.
If
.BR DVTM_PLUS_EDITOR
is not set
.BR EDITOR
is checked, if this is also not set the default value specified in
.BR config.h
is used instead.
.SH EXAMPLE
See the
.I dvtm-plus-status
script as an example of how to display text in the
status bar.
.SH CUSTOMIZATION
dvtm-plus is customized by creating a custom
.I config.h
and (re)compiling the source code.
This keeps it fast, secure and simple.
.SH AUTHOR
dvtm-plus is written by Marc Andr√© Tanner <mat at brain-dump.org>
